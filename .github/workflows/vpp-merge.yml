name: vpp-merge

on:
  workflow_run:
    workflows: ["vpp-checkstyle"]
    types:
      - completed

defaults:
  run:
    shell: bash

permissions:
  contents: read
  actions: read

jobs:
  get-vpp-gerrit-vars:
    name: Get VPP Gerrit Environment Variables
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.read-vpp-gerrit-vars.outputs.branch }}
      refspec: ${{ steps.read-vpp-gerrit-vars.outputs.refspec }}
      url: ${{ steps.read-vpp-gerrit-vars.outputs.url }}
    steps:
      - name: Download vpp-gerrit-vars Artifacts
        id: download-artifact
        run: |
          set -euo pipefail
          # Get the artifact download URL
          ARTIFACTS_URL="https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}/artifacts"

          echo "Fetching artifacts from: $ARTIFACTS_URL"
          echo "Workflow run ID: ${{ github.event.workflow_run.id }}"
          echo "Workflow run conclusion: ${{ github.event.workflow_run.conclusion }}"

          # Get all artifacts info for debugging
          ARTIFACTS_RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "$ARTIFACTS_URL")

          echo "=== All artifacts in this workflow run ==="
          echo "$ARTIFACTS_RESPONSE" | jq -r '.artifacts[] | "\(.name) (ID: \(.id), expired: \(.expired))"' || echo "No artifacts or jq error"

          # Find the vpp-gerrit-vars artifact
          ARTIFACT_ID=$(echo "$ARTIFACTS_RESPONSE" | jq -r '.artifacts[] | select(.name=="vpp-gerrit-vars") | .id')

          if [ "$ARTIFACT_ID" = "null" ] || [ -z "$ARTIFACT_ID" ]; then
            echo "Error: vpp-gerrit-vars artifact not found"
            echo "Available artifacts:"
            echo "$ARTIFACTS_RESPONSE" | jq -r '.artifacts[].name' || echo "Failed to parse artifacts"
            exit 1
          fi

          echo "Using artifact ID: $ARTIFACT_ID"

          # Download the artifact
          DOWNLOAD_URL="https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$ARTIFACT_ID/zip"
          curl -s -L -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "$DOWNLOAD_URL" -o artifact.zip

          # Extract the artifact
          unzip -q artifact.zip
          echo "=== Extracted contents ==="
          ls -la

      - name: Read VPP Gerrit Environment Variables
        id: read-vpp-gerrit-vars
        run: |
          set -euo pipefail

          if [ -f "branch" ]; then
            echo "Found files in root directory"
            BRANCH_FILE="branch"
            REFSPEC_FILE="refspec"
            URL_FILE="url"
          else
            echo "Error: workflow output files not found in expected locations"
            echo "Current directory contents:"
            ls -la
            if [ -d "vpp-gerrit-vars" ]; then
              echo "vpp-gerrit-vars directory contents:"
              ls -la vpp-gerrit-vars/
            fi
            exit 1
          fi

          # Validate files exist and are readable
          if [ ! -f "$BRANCH_FILE" ] || [ ! -f "$REFSPEC_FILE" ] || [ ! -f "$URL_FILE" ]; then
            echo "Error: One or more required files are missing"
            echo "Expected: $BRANCH_FILE, $REFSPEC_FILE, $URL_FILE"
            exit 1
          fi

          # Read the content and set outputs
          BRANCH_VALUE=$(cat "$BRANCH_FILE" | tr -d '\n' | tr -d '\r')
          REFSPEC_VALUE=$(cat "$REFSPEC_FILE" | tr -d '\n' | tr -d '\r')
          URL_VALUE=$(cat "$URL_FILE" | tr -d '\n' | tr -d '\r')

          echo "branch=$BRANCH_VALUE" >> $GITHUB_OUTPUT
          echo "refspec=$REFSPEC_VALUE" >> $GITHUB_OUTPUT
          echo "url=$URL_VALUE" >> $GITHUB_OUTPUT

          echo "Successfully read outputs:"
          echo "  branch=$BRANCH_VALUE"
          echo "  refspec=$REFSPEC_VALUE"
          echo "  url=$URL_VALUE"

  merge-build-test:
    name: Merge, Build, & Test VPP
    needs: get-vpp-gerrit-vars
    uses: ./.github/workflows/vpp-build-test-merge.yml
    with:
      is_merge: true
      branch: ${{ needs.get-vpp-gerrit-vars.outputs.branch }}
      refspec: ${{ needs.get-vpp-gerrit-vars.outputs.refspec }}
      url: ${{ needs.get-vpp-gerrit-vars.outputs.url }}
    secrets: inherit
