name: vpp-checkstyle

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
    inputs:
      GERRIT_BRANCH:
        description: "Branch that change is against"
        required: true
        type: string
      GERRIT_CHANGE_ID:
        description: "The ID for the change"
        required: true
        type: string
      GERRIT_CHANGE_NUMBER:
        description: "The Gerrit number"
        required: true
        type: string
      GERRIT_CHANGE_URL:
        description: "URL to the change"
        required: true
        type: string
      GERRIT_EVENT_TYPE:
        description: "Type of Gerrit event"
        required: true
        type: string
      GERRIT_PATCHSET_NUMBER:
        description: "The patch number for the change"
        required: true
        type: string
      GERRIT_PATCHSET_REVISION:
        description: "The revision sha"
        required: true
        type: string
      GERRIT_PROJECT:
        description: "Project in Gerrit"
        required: true
        type: string
      GERRIT_REFSPEC:
        description: "Gerrit refspec of change"
        required: true
        type: string

concurrency:
  # yamllint disable-line rule:line-length
  group: required-verify-${{ github.workflow }}-${{ github.event.inputs.GERRIT_BRANCH }}-${{ github.event.inputs.GERRIT_CHANGE_ID || github.run_id }}
  cancel-in-progress: true

jobs:
  checkstyle:
    name: Checkstyle on ${{ matrix.os }} ${{ matrix.executor_arch }}
    runs-on:
      - self-hosted
      - nomad
      - fdio:arch=${{ matrix.executor_arch }}
      - fdio:class=builder
      - fdio:namespace=sandbox
      - fdio:os=${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu2404]
        executor_arch: [x86_64]

    steps:
      - name: Gerrit Checkout
        # yamllint disable-line rule:line-length
        uses: lfit/checkout-gerrit-change-action@54d751e8bd167bc91f7d665dabe33fae87aaaa63 # v0.9
        with:
          gerrit-refspec: ${{ github.event.inputs.GERRIT_REFSPEC }}
          gerrit-project: ${{ github.event.inputs.GERRIT_PROJECT }}
          gerrit-url: ${{ vars.GERRIT_URL }}
          delay: "30s"
          ref: refs/heads/${{ github.event.inputs.GERRIT_BRANCH }}

      - name: Retrieve GIT commit message
        # yamllint disable-line rule:line-length
        uses: lfit/releng-reusable-workflows/.github/actions/git-commit-message-action@main

      - name: Setup Environment
        uses: pmikus/.github/.github/actions/setup_executor_env@main

      - name: Set branch based on event type
        id: set-branch
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # For pull requests, use the target branch
            BRANCH="${{ github.base_ref }}"
            echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          else
            # For pushes and workflow_dispatch, use the current branch
            BRANCH="${GITHUB_REF#refs/heads/}"
            echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          fi
          echo "Event: ${{ github.event_name }}, Branch: $BRANCH"

      - name: Run Checkstyle Scripts
        run: |
          .github/scripts/checkstyle.sh

      - name: Run Test Checkstyle Scripts
        run: |
          .github/scripts/test_checkstyle.sh

      - name: Run API Checkstyle Scripts
        run: |
          .github/scripts/api_checkstyle.sh

      - name: Run Commit Message Checkstyle
        run: |
          .github/scripts/commitmsg.sh

      - name: Run Docs Spell
        run: |
          .github/scripts/docs_spell.sh

      - name: Archive Checkstyle Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: checkstyle-logs-${{ steps.set-branch.outputs.target_branch }}-${{ matrix.os }}
          path: logs/

      - name: Report Success
        if: success()
        run: |
          echo "Checkstyle passed for ${{ steps.set-branch.outputs.target_branch }} on ${{ matrix.os }}"
          echo "::notice::Checkstyle workflow completed successfully! Workflow ID: ${{ github.run_id }}, Name: ${{ github.workflow }}, Repository: ${{ github.repository }}, Branch: ${{ steps.set-branch.outputs.target_branch }}"
