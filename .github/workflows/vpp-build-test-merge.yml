name: vpp-build-test-merge
# This workflow can be triggered ONLY by other workflows (workflow_call)

on:
  # Invocation from other workflows
  workflow_call:
    inputs:
      is_build:
        description: 'Run only build phase (no tests, no merge)'
        required: false
        default: false
        type: boolean
      is_verify:
        description: 'Run build + test phases (skip merge)'
        required: false
        default: false
        type: boolean
      is_merge:
        description: 'Run build + merge phases (skip tests)'
        required: false
        default: false
        type: boolean

defaults:
  run:
    shell: bash

jobs:
  vpp-verify:
    runs-on:
      - self-hosted
      - nomad
      - fdio:arch=${{ matrix.executor_arch }}
      - fdio:class=builder
      - fdio:namespace=sandbox
      - fdio:os=${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu2404', 'ubuntu2204', 'debian12']
        executor_arch: ['x86_64', 'aarch64']
        build_type: ${{ (inputs.build_type == 'debug' || github.event.inputs.build_type == 'debug') && fromJson('["debug"]') || (inputs.build_type == 'release' || github.event.inputs.build_type == 'release') && fromJson('["release"]') || fromJson('["debug", "release"]') }}
        exclude:
          # Exclude debian12 on aarch64 for all builds
          - os: 'debian12'
            executor_arch: 'aarch64'
          # Exclude non-ubuntu2204 OS for debug builds
          - build_type: 'debug'
            os: 'ubuntu2404'
          - build_type: 'debug'
            os: 'debian12'
          # Exclude aarch64 architecture for debug builds
          - build_type: 'debug'
            executor_arch: 'aarch64'

    env:
      CACHE_DATE: ${{ github.run_id }}
      CCACHE_DIR: /scratch/ccache/${{ matrix.os }}-${{ matrix.executor_arch }}
      DOCKER_TEST: 1
      EXECUTOR_ARCH: ${{ matrix.executor_arch }}
      JOB_NAME: ${{ github.job }}-${{ env.GERRIT_BRANCH == 'master' && 'master' || env.GERRIT_BRANCH == 'stable/2502' && '2502' || '2506' }}-${{ matrix.os }}-${{ matrix.executor_arch }}
      MAKE_PARALLEL_JOBS: 16
      MAKE_TEST_OS: ${{ matrix.os == 'ubuntu2204' && 'ubuntu-22.04' || matrix.os == 'ubuntu2404' && 'ubuntu-24.04' || 'debian-12' }}
      MAKE_TEST_MULTIWORKER_OS: 'debian-12'
      SHM_SIZE: ${{ matrix.executor_arch == 'aarch64' && '4096M' || '2048M' }}
      STREAM: ${{ env.GERRIT_BRANCH == 'master' && 'master' || env.GERRIT_BRANCH == 'stable/2502' && '2502' || '2506' }}
      TEST_RETRIES: 3
      VPPAPIGEN_TEST_OS: ${{ matrix.os == 'ubuntu2204' && 'ubuntu-22.04' || matrix.os == 'ubuntu2404' && 'ubuntu-24.04' || 'debian-12' }}
      VPP_SRC_DIR: /scratch/docker-build/vpp
      WORKSPACE: ${{ github.workspace }}

    steps:
      - name: Determine phase selection (Build/Test/Merge)
        run: |
          BUILD_INPUT='${{ inputs.is_build || github.event.inputs.is_build }}'
          TEST_INPUT='${{ inputs.is_verify || github.event.inputs.is_verify }}'
          MERGE_INPUT='${{ inputs.is_merge || github.event.inputs.is_merge }}'
          RUN_TEST_PHASE=true
          RUN_MERGE_PHASE=true
          # Precedence: Build > Test > Merge (if multiple true)
          if [[ "$BUILD_INPUT" == 'true' ]]; then
            RUN_TEST_PHASE=false
            RUN_MERGE_PHASE=false
            PHASE_MODE='BUILD'
          elif [[ "$TEST_INPUT" == 'true' ]]; then
            RUN_TEST_PHASE=true
            RUN_MERGE_PHASE=false
            PHASE_MODE='TEST'
          elif [[ "$MERGE_INPUT" == 'true' ]]; then
            RUN_TEST_PHASE=false
            RUN_MERGE_PHASE=true
            PHASE_MODE='MERGE'
          else
            PHASE_MODE='FULL'
          fi
          echo "RUN_TEST_PHASE=${RUN_TEST_PHASE}" >> $GITHUB_ENV
          echo "RUN_MERGE_PHASE=${RUN_MERGE_PHASE}" >> $GITHUB_ENV
          echo "PHASE_MODE=${PHASE_MODE}" >> $GITHUB_ENV
          echo "Selected phase mode: ${PHASE_MODE} (RUN_TEST_PHASE=${RUN_TEST_PHASE} RUN_MERGE_PHASE=${RUN_MERGE_PHASE})"

      - name: Setup Environment
        uses: pmikus/.github/.github/actions/setup_executor_env@main

      - name: Setup Docker Environment
        run: |
          if [ -n ${DOCKER_TEST} ] ; then
            # for 4 cores:
            # framework.VppTestCase.MIN_REQ_SHM + (num_cores * framework.VppTestCase.SHM_PER_PROCESS)
            # 1073741824 == 1024M (1073741824 >> 20)
            MEM=1024M
            if [[ ${MAKE_PARALLEL_JOBS} == '16' ]]
            then
                # arm build are running with 16 cores, empirical evidence shows
                # that 2048M is enough
                MEM=2048M
            fi
            sudo mount -o remount /dev/shm -o size=${MEM} || true
                  echo "/dev/shm remounted with size='${MEM}'"
          fi

      - name: Install VPP external dependencies
        run: |
          .ci/scripts/vpp/setup_vpp_ext_deps.sh

      - name: Build VPP
        timeout-minutes: 60
        run: |
          .ci/scripts/vpp/build.sh
